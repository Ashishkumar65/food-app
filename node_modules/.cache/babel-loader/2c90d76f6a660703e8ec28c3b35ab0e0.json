{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Desktop/react/food-app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isSixChars = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [forminputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredPostalCodeIsValid && enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onconfirm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${forminputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), !forminputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plese enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${forminputsValidity.street ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), !forminputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plese enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${forminputsValidity.postalCode ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), !forminputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plese enter a valid psotal code!(6 chars long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${forminputsValidity.city ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), !forminputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plese enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"bb2sDFG8oXr9sIfKf+hkw85tYhY=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isSixChars","length","Checkout","props","forminputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onconfirm","form","control","invalid","actions","onCancel","submit"],"sources":["/Users/ashish/Desktop/react/food-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef,useState } from 'react';\nimport classes from './Checkout.module.css';\nconst isEmpty = value => value.trim() === '';\nconst isSixChars = value => value.trim().length === 6;\n\nconst Checkout = (props) => {\n    const [forminputsValidity,setFormInputsValidity]=useState({\n        name:true,\n        street:true,\n        city:true,\n        postalCode:true\n    })\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n    const confirmHandler = (event) => {\n        event.preventDefault();\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\n\n        setFormInputsValidity({\n            name:enteredNameIsValid,\n            street:enteredStreetIsValid,\n            city:enteredCityIsValid,\n            postalCode:enteredPostalCodeIsValid\n        });\n\n        const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredPostalCodeIsValid && enteredStreetIsValid;\n\n        if(!formIsValid){\n         return;\n        }\n        props.onconfirm()\n\n    };\n\n    return (\n        <form className={classes.form} onSubmit={confirmHandler}>\n            <div className={`${classes.control} ${forminputsValidity.name?'':classes.invalid}`}>\n                <label htmlFor='name'>Your Name</label>\n                <input type='text' id='name' ref={nameInputRef} />\n                {!forminputsValidity.name && <p>Plese enter a valid name!</p>}\n            </div>\n            <div className={`${classes.control} ${forminputsValidity.street?'':classes.invalid}`}>\n                <label htmlFor='street'>Street</label>\n                <input type='text' id='street' ref={streetInputRef} />\n                {!forminputsValidity.street && <p>Plese enter a valid street!</p>}\n            </div>\n            <div className={`${classes.control} ${forminputsValidity.postalCode?'':classes.invalid}`}>\n                <label htmlFor='postal'>Postal Code</label>\n                <input type='text' id='postal' ref={postalCodeInputRef} />\n                {!forminputsValidity.postalCode && <p>Plese enter a valid psotal code!(6 chars long)</p>}\n            </div>\n            <div className={`${classes.control} ${forminputsValidity.city?'':classes.invalid}`}>\n                <label htmlFor='city'>City</label>\n                <input type='text' id='city' ref={cityInputRef} />\n                {!forminputsValidity.name && <p>Plese enter a valid city!</p>}\n            </div>\n            <div className={classes.actions}>\n                <button type='button' onClick={props.onCancel}>\n                    Cancel\n                </button>\n                <button className={classes.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}